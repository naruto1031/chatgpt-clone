import Head from 'next/head'
import { Configuration, OpenAIApi } from "openai";
import { FormEvent, useState } from 'react';

// オブジェクト定義
interface Message {
  sender: string;
  text: string;
}

export default function Home() {
  const [message, setMessage] = useState<string>("");
  const [messages, setMessages] = useState<Message[]>([]);
  const [isLading, setIsLoading] = useState<boolean>(false);

  const configuration = new Configuration({
    apiKey: process.env.NEXT_PUBLIC_OPENAPI_KEY,
  });

  const openai = new OpenAIApi(configuration);

  const handleSubmit = async (e: FormEvent<HTMLFormElement>) => {
    e.preventDefault();

    setIsLoading(true);

    const response = await openai.createChatCompletion({
      model: "gpt-3.5-turbo",
      messages: [{ role: "user", content: "こんにちは" }]
    });

    setMessages((prevMessage: Message[]) => [
      ...prevMessage,
      { sender: "user", text: message },
      { sender: "ai", text: response.data.choices[0].message?.content || "" },
    ]);

    console.log(messages);

    setIsLoading(false);
  }

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="flex flex-col items-center justify-center h-screen">
        <div className="max-w-lg w-full">
          <div
            style={{ height: "650px" }}
            className="bg-gray-100 w-full p-4 h-96 overflow-scroll rounded-md"
          >
            <span className='text-center block font-medium text-2xl border-b-2 border-indigo-400 pb-3 mb-3'>ChatGPT-Clone</span>
            <div className="flex justify-end mb-2">
              <div className='bg-indigo-400 text-white p-2 rounded-md'>hello</div>
            </div>
            <div className="flex justify-start mb-2">
              <div className=' bg-gray-200 p-2 rounded-md'>こんにちは何か御用ですか？</div>
            </div>
          </div>
          <form
            action="/"
            className='w-full'
            onSubmit={(e) => { handleSubmit(e) }}
          >
            <div className="flex items-center p-4 bg-gray-100 rounded-b-lg w-full">
              <input
                type="text"
                className='flex-1 border-2 py-2 px-4 rounded-lg focus:outline-none'
                onChange={(e) => setMessage(e.target.value)}
                value={message}
              />
              <button
                type="submit"
                className='p-2 bg-indigo-400 rounded-lg text-white hover:bg-indigo-500'
              >
                {isLading ? <span>送信中・・・</span> : <span>送信</span>}
              </button>
            </div>
          </form>
        </div>
      </div>
    </>
  )
}
